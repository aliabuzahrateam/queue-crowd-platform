version: '3.8'
services:
  admin-frontend:
    build: ./admin-frontend
    ports:
      - "3000:4173"
    depends_on:
      - auth-service
    environment:
      - NODE_ENV=production
  kiosk-frontend:
    build: ./kiosk-frontend
    ports:
      - "3001:4173"
    environment:
      - NODE_ENV=production
  public-display-frontend:
    build: ./public-display-frontend
    ports:
      - "3002:4173"
    environment:
      - NODE_ENV=production
  staff-frontend:
    build: ./staff-frontend
    ports:
      - "3003:4173"
    environment:
      - NODE_ENV=production
  auth-service:
    build: ./auth-service
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    depends_on:
      - db
  branch-service:
    build: ./branch-service
    ports:
      - "4001:4000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    depends_on:
      - db
  crowding-service:
    build: ./crowding-service
    ports:
      - "4002:4000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    depends_on:
      - db
  feedback-service:
    build: ./feedback-service
    ports:
      - "4003:4000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    depends_on:
      - db
  notification-service:
    build: ./notification-service
    ports:
      - "4004:4000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    depends_on:
      - db
  queue-service:
    build: ./queue-service
    ports:
      - "4005:4000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
    depends_on:
      - db
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/html:/etc/nginx/html:ro
    depends_on:
      - admin-frontend
      - kiosk-frontend
      - public-display-frontend
      - staff-frontend
      - auth-service
      - branch-service
      - crowding-service
      - feedback-service
      - notification-service
      - queue-service
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  dotnet-sdk:
    image: mcr.microsoft.com/dotnet/sdk:7.0
    container_name: dotnet-sdk
    volumes:
      - ./dotnet-app:/app
    working_dir: /app
    command: ["sleep", "infinity"]
volumes:
  pgdata: 