// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
  output          = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth_service"]
}

model User {
  id            String   @id @default(uuid())
  username      String   @unique
  email         String   @unique
  phone         String?  @unique
  password_hash String
  role          String   @default("user")
  is_active     Boolean  @default(true)
  is_2fa_enabled Boolean @default(false)
  two_fa_secret String?
  last_login_at DateTime?
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  sessions      Session[]
  passwordResets PasswordReset[]

  @@map("user")
  @@schema("auth_service")
}

model Session {
  id            String   @id @default(uuid())
  user_id       String
  refresh_token String   @unique
  user_agent    String?
  ip_address    String?
  expires_at    DateTime
  created_at    DateTime @default(now())

  user          User     @relation(fields: [user_id], references: [id])

  @@map("session")
  @@schema("auth_service")
}

model PasswordReset {
  id         String   @id @default(uuid())
  user_id    String
  token      String   @unique
  expires_at DateTime
  used       Boolean  @default(false)
  created_at DateTime @default(now())

  user       User     @relation(fields: [user_id], references: [id])

  @@map("password_reset")
  @@schema("auth_service")
}
